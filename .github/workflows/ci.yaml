name: 'Conveyor-CLI: CI'

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  pull-requests: read

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

env:
  GRYPE_MATCH_GOLANG_USING_CPES: false
  # Setting an environment variable with the value of a configuration variable
  CONVEYOR_STORAGE_TOKEN: ${{ secrets.CONVEYOR_STORAGE_TOKEN }}
  CONVEYOR_STORAGE_ACCOUNT_NAME: ${{ vars.CONVEYOR_STORAGE_ACCOUNT_NAME }}
  CONVEYOR_STORAGE_CONTAINER_NAME: ${{ vars.CONVEYOR_STORAGE_CONTAINER_NAME }}

jobs:
  sbom-stage:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v3
          with:
            fetch-depth: 0
        
        - name: Set up Go
          uses: actions/setup-go@v3
          with:
            go-version-file: go.mod
            cache: true
        
        - name: Build
          run: go run mage.go build
        
        # see: https://github.com/anchore/sbom-action
        - name: Create SBOM
          uses: anchore/sbom-action@v0
          with:
            format: spdx-json
            output-file: "${{ github.event.repository.name }}-sbom.spdx.json"
        
        # see: https://github.com/anchore/scan-action
        - name: Scan SBOM
          id: scan
          uses: anchore/scan-action@v3
          with:
            sbom: "${{ github.event.repository.name }}-sbom.spdx.json"
            output-format: json
            fail-build: high
            severity-cutoff: high
        # see: https://github.com/actions/upload-artifact
        - name: Upload Artifacts
          uses: actions/upload-artifact@v3
          with:
            name: sbom-stage
            path: |
              /tmp/sbom-action-*/*

  # see: https://semgrep.dev/docs/semgrep-ci/sample-ci-configs/#sample-github-actions-configuration-file
  semgrep:
    # User-definable name of this GitHub Actions job:
    name: semgrep
    # If you are self-hosting, change the following `runs-on` value: 
    runs-on: ubuntu-latest

    container:
      # A Docker image with Semgrep installed. Do not change this.
      image: returntocorp/semgrep

    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')

    steps:
      # Fetch project source with GitHub Actions Checkout.
      - uses: actions/checkout@v3
      # Run the "semgrep ci" command on the command line of the docker image.
      - run: semgrep ci --sarif --output=semgrep.sarif
        env:
           # Add the rules that Semgrep uses by setting the SEMGREP_RULES environment variable. 
           SEMGREP_RULES: p/default # more at semgrep.dev/explore

      # see: https://github.com/actions/upload-artifact
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: semgrep
          path: semgrep.sarif

      # - name: Upload SARIF file for GitHub Advanced Security Dashboard
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: semgrep.sarif
      #   if: always()
  
  conveyor:
      needs: ["sbom-stage", "semgrep"]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v3
          with:
            fetch-depth: 0
        
        - name: Set up Go
          uses: actions/setup-go@v3
          with:
            go-version: '>=1.19'
        
        - name: Get Conveyor
          run: go install github.com/MChorfa/conveyor-cli@latest
        # see: https://github.com/MChorfa/conveyor-cli
        - name: Run Conveyor
          run: |
            conveyor-cli conveyor \
            --commit-hash "$GITHUB_SHA" \
            --ref-name "$GITHUB_REF_NAME" \
            --pipeline-id $GITHUB_RUN_ID \
            --project-id $GITHUB_REPOSITORY_ID \
            --project-name "conveyor-cli" \
            --owner-name "$GITHUB_REPOSITORY_OWNER" \
            --job-name sbom-stage \
            --job-name semgrep \
            --provider-api-url "https://api.github.com" \
            --provider-token "${{ github.token }}" \
            --provider-type "github" \
            --storage-type "azure" \
            --storage-token "${{ env.CONVEYOR_STORAGE_TOKEN }}" \
            --storage-account-name "${{ env.CONVEYOR_STORAGE_ACCOUNT_NAME }}" \
            --storage-container-name "${{ env.CONVEYOR_STORAGE_CONTAINER_NAME }}"